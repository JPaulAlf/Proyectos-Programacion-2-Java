/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Capa_Vista;

import Capa_Logica_Negocios.*;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FrmVentana_BuscarContenido extends javax.swing.JFrame {
        
        public  Usuario usuarioAux=null;
        public  Usuario_Perfil usuarioPerfil=null;
         
        private ContenidoAudioVisual contenidoAux=null;
        DefaultTableModel modeloTablaContenidosPelicula = new DefaultTableModel();
        DefaultTableModel modeloTablaContenidoSerie = new DefaultTableModel();
     
        
    public FrmVentana_BuscarContenido() {
        initComponents();
         this.setTitle("Elaborado por John Paul Alfaro Carballo");
         this.setSize(new Dimension(900,600));
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        
           try {
            setIconImage(new ImageIcon(getClass().getResource("../Fondo_Pantalla_Ventanas/imagen.png")).getImage());
        } catch (Exception e) { }
        
        this.modeloTablaContenidoSerie= (DefaultTableModel)this.jTblContenidoAudiovisual.getModel();
        this.modeloTablaContenidosPelicula=(DefaultTableModel)this.jTblContenidoAudiovisual.getModel();
        
    }
    public FrmVentana_BuscarContenido(Usuario usuarioAuxp, Usuario_Perfil usuarioPerfilp) {
        initComponents();
         this.setTitle("Elaborado por John Paul Alfaro Carballo");
        this.setSize(new Dimension(900,600));
        this.setResizable(false);
        this.setLocationRelativeTo(null);
          try {
            setIconImage(new ImageIcon(getClass().getResource("../Fondo_Pantalla_Ventanas/imagen.png")).getImage());
        } catch (Exception e) { }
        
        this.usuarioAux=usuarioAuxp;
        this.usuarioPerfil=usuarioPerfilp;
        
        this.modeloTablaContenidoSerie= (DefaultTableModel)this.jTblContenidoAudiovisual.getModel();
        this.modeloTablaContenidosPelicula=(DefaultTableModel)this.jTblContenidoAudiovisual.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblContenidoAudiovisual = new javax.swing.JTable();
        jBtnCerrarSesion = new javax.swing.JButton();
        jBtnMenu = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jRdbTipoPelicula = new javax.swing.JRadioButton();
        jRdbTipoSerie = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jRdbBusquedaGenero = new javax.swing.JRadioButton();
        jRdbBusquedaTitulo = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jCbxBusquedaGenero = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTxtBusquedaTitulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLblUsuarioLinea = new javax.swing.JLabel();
        jLblFondoPantalla = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setToolTipText("");
        jPanel1.setOpaque(false);

        jTblContenidoAudiovisual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Tipo Contenido", "Titulo", "Año de filmacion", "Genero", "¿Es original?", "Calificacion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblContenidoAudiovisual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblContenidoAudiovisualMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTblContenidoAudiovisual);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(30, 180, 840, 370);

        jBtnCerrarSesion.setText("Cerrar Sesion");
        jBtnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCerrarSesionActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnCerrarSesion);
        jBtnCerrarSesion.setBounds(720, 130, 150, 30);

        jBtnMenu.setText("Menu");
        jBtnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnMenuActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnMenu);
        jBtnMenu.setBounds(720, 100, 150, 30);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("¿Que deseas buscar?"));
        jPanel4.setOpaque(false);

        buttonGroup1.add(jRdbTipoPelicula);
        jRdbTipoPelicula.setText("Pelicula");
        jRdbTipoPelicula.setContentAreaFilled(false);
        jRdbTipoPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdbTipoPeliculaActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRdbTipoSerie);
        jRdbTipoSerie.setText("Serie");
        jRdbTipoSerie.setOpaque(false);
        jRdbTipoSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdbTipoSerieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRdbTipoSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRdbTipoPelicula))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jRdbTipoPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRdbTipoSerie)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(30, 80, 160, 90);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Metodo de busqueda"));
        jPanel5.setOpaque(false);

        buttonGroup2.add(jRdbBusquedaGenero);
        jRdbBusquedaGenero.setText("Genero");
        jRdbBusquedaGenero.setOpaque(false);
        jRdbBusquedaGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdbBusquedaGeneroActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRdbBusquedaTitulo);
        jRdbBusquedaTitulo.setText("Titulo");
        jRdbBusquedaTitulo.setOpaque(false);
        jRdbBusquedaTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdbBusquedaTituloActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione un genero");

        jCbxBusquedaGenero.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCbxBusquedaGeneroItemStateChanged(evt);
            }
        });

        jLabel2.setText("Digite el titulo");

        jTxtBusquedaTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtBusquedaTituloKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jRdbBusquedaGenero, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(jRdbBusquedaTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jCbxBusquedaGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jTxtBusquedaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRdbBusquedaGenero)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCbxBusquedaGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtBusquedaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRdbBusquedaTitulo))))
        );

        getContentPane().add(jPanel5);
        jPanel5.setBounds(200, 80, 510, 90);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Bienvenido al area de busqueda de contenido:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 30, 380, 30);

        jLblUsuarioLinea.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        getContentPane().add(jLblUsuarioLinea);
        jLblUsuarioLinea.setBounds(530, 10, 350, 30);

        jLblFondoPantalla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fondo_Pantalla_Ventanas/FondoPantallaAdminReporte1.jpg"))); // NOI18N
        getContentPane().add(jLblFondoPantalla);
        jLblFondoPantalla.setBounds(0, 0, 910, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
//==============================================================================================   
    private void jRdbTipoPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdbTipoPeliculaActionPerformed
        if(this.jRdbTipoPelicula.isSelected()){
            if(this.cantidadPelicula()!= 0){
                this.llenaTabla_ContenidosPelicula();
                this.buttonGroup2.clearSelection();
                this.jRdbBusquedaGenero.setEnabled(true);
                this.jRdbBusquedaTitulo.setEnabled(true);
                this.jCbxBusquedaGenero.setEnabled(false);
                this.jTxtBusquedaTitulo.setEnabled(false);
            }else{
                this.buttonGroup2.clearSelection();
                this.jRdbBusquedaGenero.setEnabled(false);
                this.jRdbBusquedaTitulo.setEnabled(false);
                this.jCbxBusquedaGenero.setEnabled(false);
                this.jTxtBusquedaTitulo.setEnabled(false);
                this.llenaTabla_ContenidosPelicula();
                JOptionPane.showMessageDialog(this, "Lo sentimos por el momento no tenemos peliculas disponibles" 
                        , "ALERTA:",JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jRdbTipoPeliculaActionPerformed

    private void jRdbTipoSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdbTipoSerieActionPerformed
        if(this.jRdbTipoSerie.isSelected()){
            if(this.cantidadSerie()!= 0){
                this.buttonGroup2.clearSelection();
                this.llenaTabla_ContenidoSerie();
                this.jRdbBusquedaGenero.setEnabled(true);
                this.jRdbBusquedaTitulo.setEnabled(true);
                this.jCbxBusquedaGenero.setEnabled(false);
                this.jTxtBusquedaTitulo.setEnabled(false);
            }else{
                this.buttonGroup2.clearSelection();
                this.jRdbBusquedaGenero.setEnabled(false);
                this.jRdbBusquedaTitulo.setEnabled(false);
                this.jCbxBusquedaGenero.setEnabled(false);
                this.jTxtBusquedaTitulo.setEnabled(false);
                this.llenaTabla_ContenidoSerie();
                JOptionPane.showMessageDialog(this, "Lo sentimos por el momento no tenemos series disponibles" ,
                        "ALERTA:",JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jRdbTipoSerieActionPerformed
//==============================================================================================
    

//==============================================================================================    
    private void jRdbBusquedaGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdbBusquedaGeneroActionPerformed
        if(this.jRdbBusquedaGenero.isSelected()){
            this.jCbxBusquedaGenero.setEnabled(true);
            this.jTxtBusquedaTitulo.setEnabled(false);
            this.jTblContenidoAudiovisual.setEnabled(true);

            if(this.jRdbTipoPelicula.isSelected()){
                this.llenaTabla_ContenidosPelicula();
            }
            if(this.jRdbTipoSerie.isSelected()){
                this.llenaTabla_ContenidoSerie();
            }

        }
    }//GEN-LAST:event_jRdbBusquedaGeneroActionPerformed

    private void jRdbBusquedaTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdbBusquedaTituloActionPerformed
        if(this.jRdbBusquedaTitulo.isSelected()){
            this.jTxtBusquedaTitulo.setEnabled(true);
            this.jCbxBusquedaGenero.setEnabled(false);
            this.jTblContenidoAudiovisual.setEnabled(true);

            if(this.jRdbTipoPelicula.isSelected()){
                this.llenaTabla_ContenidosPelicula();
            }
            if(this.jRdbTipoSerie.isSelected()){
                this.llenaTabla_ContenidoSerie();
            }

        }
    }//GEN-LAST:event_jRdbBusquedaTituloActionPerformed
//==============================================================================================
    
 
//==============================================================================================    
    private void jCbxBusquedaGeneroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCbxBusquedaGeneroItemStateChanged
        this.llenaTabla_BusquedaGenero((TIPO_GENERO)this.jCbxBusquedaGenero.getSelectedItem());
    }//GEN-LAST:event_jCbxBusquedaGeneroItemStateChanged

    private void jTxtBusquedaTituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtBusquedaTituloKeyTyped
        this.llenaTabla_BusquedaTitulo(this.jTxtBusquedaTitulo.getText());
    }//GEN-LAST:event_jTxtBusquedaTituloKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.objetosDesactivados();
        this.llenaCombo_Genero();
        
         this.jLblUsuarioLinea.setText("Online: [ Cuenta: "+usuarioAux.getNombre()+
                 " / Perfil: "+usuarioPerfil.getNombre()+" ]");
 
        
    }//GEN-LAST:event_formWindowOpened
//==============================================================================================
    

//==============================================================================================    
    private void jTblContenidoAudiovisualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblContenidoAudiovisualMouseClicked
    try { 
        
            String codigo = jTblContenidoAudiovisual.getValueAt(jTblContenidoAudiovisual.getSelectedRow(), 0).toString();            
            try {
                this.contenidoAux = ContenidoAudioVisual.consultarContenidoAudiovisual(codigo);                
            } catch (Exception ex) { }
          
    
        int opcion=JOptionPane.showConfirmDialog(this,
    (contenidoAux instanceof ContenidoPelicula)?
            "La pelicula buscada es: \n"+ this.contenidoAux.toString()+"\n\n¿Es lo que buscabas?":
            "La serie buscada es: \n"+ this.contenidoAux.toString()+"\n\n¿Es lo que buscabas?",
                "Busqueda realizada:", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        
        if(opcion==0){ // Opcion de confirmacion
            this.jTblContenidoAudiovisual.clearSelection();
            
            
        }else if(opcion==1){ // Opcion de negacion
            
        } 
        
        
        } catch (Exception e) { }  
    }//GEN-LAST:event_jTblContenidoAudiovisualMouseClicked

    private void jBtnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnMenuActionPerformed
       FrmVentana_MenuOpcion frm = new FrmVentana_MenuOpcion(usuarioAux, usuarioPerfil);
         frm.setLocationRelativeTo(null);
         frm.setVisible(true);        
         this.dispose(); 
    }//GEN-LAST:event_jBtnMenuActionPerformed

    private void jBtnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCerrarSesionActionPerformed
       this.dispose();
        FrmVentana_InicioSesion frm = new FrmVentana_InicioSesion();
        frm.setVisible(true);
        frm.setLocationRelativeTo(null);
    }//GEN-LAST:event_jBtnCerrarSesionActionPerformed
//==============================================================================================    
    
    
    
    
//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
    // METODOS EXTRAS, DAN FORMA A LA VENTANA **no tocar**
    private void objetosDesactivados(){
        this.jCbxBusquedaGenero.setEnabled(false);
        this.jTxtBusquedaTitulo.setEnabled(false);
        this.jRdbBusquedaGenero.setEnabled(false);
        this.jRdbBusquedaTitulo.setEnabled(false);
        this.jTblContenidoAudiovisual.setEnabled(false);
        this.jTblContenidoAudiovisual.setEnabled(false);
    }
    
    private void llenaTabla_ContenidosPelicula(){
        
        modeloTablaContenidosPelicula.setRowCount(0);//Limpia la tabla
        Object[] datos = new Object[7];        
        ArrayList<ContenidoAudioVisual> lista= new ArrayList<ContenidoAudioVisual>();
        
        try {
            // trae contenido del archivo
           lista = ContenidoAudioVisual.listadoContendio(); 
        } catch (Exception e) { }
        
         for (int i = 0; i < lista.size(); i++) {
            if(lista.get(i) instanceof ContenidoPelicula){
                    datos[0] = lista.get(i).getCodigo();
                    datos[1] = "Pelicula";
                    datos[2] = lista.get(i).getTitulo();
                    datos[3] = lista.get(i).devuelveAnnoCreacion();
                    datos[4] = lista.get(i).getGenero();
                    datos[5] = (lista.get(i).isEsOriginal())? "Original" : "No original";
                    datos[6] = lista.get(i).puntajeObtenido()+"%";
                    modeloTablaContenidosPelicula.addRow(datos);
                    //Agrega el arreglo como una nueva fila de la tabla
       }
     }
    }
    private void llenaTabla_ContenidoSerie(){
         
       modeloTablaContenidoSerie.setRowCount(0);//Limpia la tabla
        Object[] datos = new Object[7];        
        ArrayList<ContenidoAudioVisual> lista= new ArrayList<ContenidoAudioVisual>();
        
        try {
            // trae contenido del archivo
           lista = ContenidoAudioVisual.listadoContendio(); 
        } catch (Exception e) { }
        
         for (int i = 0; i < lista.size(); i++) {
            if(lista.get(i) instanceof ContenidoSerie){
                    datos[0] = lista.get(i).getCodigo();
                    datos[1] = "Serie";
                    datos[2] = lista.get(i).getTitulo();
                    datos[3] = lista.get(i).devuelveAnnoCreacion();
                    datos[4] = lista.get(i).getGenero();
                    datos[5] = (lista.get(i).isEsOriginal())? "Original" : "No original";
                    datos[6] = lista.get(i).puntajeObtenido()+"%";
                    modeloTablaContenidosPelicula.addRow(datos);
                    //Agrega el arreglo como una nueva fila de la tabla
       }
     }
    }
    private void llenaCombo_Genero(){
        for (TIPO_GENERO genero : TIPO_GENERO.values()) {
            this.jCbxBusquedaGenero.addItem(genero);
        }
    }
    
    
    private void llenaTabla_BusquedaGenero(TIPO_GENERO genero){
       Object[] datos = new Object[7];        
       ArrayList<ContenidoAudioVisual> lista= new ArrayList<ContenidoAudioVisual>();
        try {
            // trae contenido del archivo
           lista = ContenidoAudioVisual.listadoContendio(); 
        } catch (Exception e) { }
        
        if(this.jRdbTipoPelicula.isSelected()){
            modeloTablaContenidosPelicula.setRowCount(0);
                for (int i = 0; i < lista.size(); i++) {
                   if(lista.get(i).getGenero().equals(genero)){
                    datos[0] = lista.get(i).getCodigo();
                    datos[1] = "Pelicula";
                    datos[2] = lista.get(i).getTitulo();
                    datos[3] = lista.get(i).devuelveAnnoCreacion();
                    datos[4] = lista.get(i).getGenero();
                    datos[5] = (lista.get(i).isEsOriginal())? "Original" : "No original";
                    datos[6] = lista.get(i).puntajeObtenido()+"%";
                    modeloTablaContenidosPelicula.addRow(datos);
                    //Agrega el arreglo como una nueva fila de la tabla
       }
     }
    } 
       if(this.jRdbTipoSerie.isSelected()){
           modeloTablaContenidoSerie.setRowCount(0);
           for (int i = 0; i < lista.size(); i++) {
           if(lista.get(i).getGenero().equals(genero)){
                    datos[0] = lista.get(i).getCodigo();
                    datos[1] = "Serie";
                    datos[2] = lista.get(i).getTitulo();
                    datos[3] = lista.get(i).devuelveAnnoCreacion();
                    datos[4] = lista.get(i).getGenero();
                    datos[5] = (lista.get(i).isEsOriginal())? "Original" : "No original";
                    datos[6] = lista.get(i).puntajeObtenido()+"%";
                    modeloTablaContenidosPelicula.addRow(datos);
                    //Agrega el arreglo como una nueva fila de la tabla
                 }
            }  
       } 
    }
    private void llenaTabla_BusquedaTitulo(String titulo){
       Object[] datos = new Object[7];        
       ArrayList<ContenidoAudioVisual> lista= new ArrayList<ContenidoAudioVisual>();
        try {
            // trae contenido del archivo
           lista = ContenidoAudioVisual.listadoContendio(); 
        } catch (Exception e) { }
        
        if(this.jRdbTipoPelicula.isSelected()){
            modeloTablaContenidosPelicula.setRowCount(0);
                for (int i = 0; i < lista.size(); i++) {
                     if(lista.get(i) instanceof ContenidoPelicula){
                          if(lista.get(i).getTitulo().toLowerCase().contains(titulo.toLowerCase())){
                                datos[0] = lista.get(i).getCodigo();
                                datos[1] = "Pelicula";
                                datos[2] = lista.get(i).getTitulo();
                                datos[3] = lista.get(i).devuelveAnnoCreacion();
                                datos[4] = lista.get(i).getGenero();
                                datos[5] = (lista.get(i).isEsOriginal())? "Original" : "No original";
                                datos[6] = lista.get(i).puntajeObtenido()+"%";
                                modeloTablaContenidosPelicula.addRow(datos);
                            //Agrega el arreglo como una nueva fila de la tabla
                          }
                    }   
             }
       } 
       if(this.jRdbTipoSerie.isSelected()){
           modeloTablaContenidoSerie.setRowCount(0);
             for (int i = 0; i < lista.size(); i++) {
                     if(lista.get(i) instanceof ContenidoSerie){
                          if(lista.get(i).getTitulo().toLowerCase().contains(titulo.toLowerCase())){
                                datos[0] = lista.get(i).getCodigo();
                                datos[1] = "Serie";
                                datos[2] = lista.get(i).getTitulo();
                                datos[3] = lista.get(i).devuelveAnnoCreacion();
                                datos[4] = lista.get(i).getGenero();
                                datos[5] = (lista.get(i).isEsOriginal())? "Original" : "No original";
                                datos[6] = lista.get(i).puntajeObtenido()+"%";
                               modeloTablaContenidoSerie.addRow(datos);
                            //Agrega el arreglo como una nueva fila de la tabla
                          }
                    }   
             }
       }
    }
    private void llenaTabla_BusquedaTitulo2(String titulo){
       Object[] datos = new Object[5];        
       ArrayList<ContenidoAudioVisual> lista= new ArrayList<ContenidoAudioVisual>();
        try {
            // trae contenido del archivo
           lista = ContenidoAudioVisual.listadoContendio(); 
        } catch (Exception e) { }
        
        if(this.jRdbTipoPelicula.isSelected()){
            modeloTablaContenidosPelicula.setRowCount(0);
                for (int i = 0; i < lista.size(); i++) {
                     if(lista.get(i) instanceof ContenidoPelicula){
                           if(lista.get(i).getTitulo().toLowerCase().indexOf(titulo.toLowerCase()) != -1){
                              datos[0]=lista.get(i).getCodigo();
                              datos[1] = lista.get(i).getTitulo();
                              datos[2] = lista.get(i).getGenero();
                              datos[3] = lista.get(i).devuelveAnnoCreacion();
                              datos[4] = lista.get(i).puntajeObtenido()+"%";
                             modeloTablaContenidosPelicula.addRow(datos);
                            //Agrega el arreglo como una nueva fila de la tabla
                          }
                    }   
             }
       } 
       if(this.jRdbTipoSerie.isSelected()){
           modeloTablaContenidoSerie.setRowCount(0);
             for (int i = 0; i < lista.size(); i++) {
                     if(lista.get(i) instanceof ContenidoSerie){
                          if(lista.get(i).getTitulo().toLowerCase().indexOf(titulo.toLowerCase()) != -1){
                              datos[0]=lista.get(i).getCodigo();
                              datos[1] = lista.get(i).getTitulo();
                              datos[2] = lista.get(i).getGenero();
                              datos[3] = lista.get(i).devuelveAnnoCreacion();
                              datos[4] = lista.get(i).puntajeObtenido()+"%";
                             modeloTablaContenidoSerie.addRow(datos);
                            //Agrega el arreglo como una nueva fila de la tabla
                          }
                    }   
             }
       }
    }
    
    
    private int cantidadPelicula(){
        int contador=0;
      ArrayList<ContenidoAudioVisual> lista= new ArrayList<ContenidoAudioVisual>();
       try {
            // trae contenido del archivo
           lista = ContenidoAudioVisual.listadoContendio(); 
        } catch (Exception e) { }
        
       for(ContenidoAudioVisual contenido : lista){
            if(contenido instanceof ContenidoPelicula){
                contador++;
            }
         }
       return contador;
    }
    private int cantidadSerie(){
            int contador=0;
      ArrayList<ContenidoAudioVisual> lista= new ArrayList<ContenidoAudioVisual>();
       try {
            // trae contenido del archivo
           lista = ContenidoAudioVisual.listadoContendio(); 
        } catch (Exception e) { }
        
       for(ContenidoAudioVisual contenido : lista){
            if(contenido instanceof ContenidoSerie){
                contador++;
            }
         }
       return contador;
    }   

//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%       
  
    
      
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmVentana_BuscarContenido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmVentana_BuscarContenido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmVentana_BuscarContenido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmVentana_BuscarContenido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmVentana_BuscarContenido().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jBtnCerrarSesion;
    private javax.swing.JButton jBtnMenu;
    private javax.swing.JComboBox<TIPO_GENERO> jCbxBusquedaGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLblFondoPantalla;
    private javax.swing.JLabel jLblUsuarioLinea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRdbBusquedaGenero;
    private javax.swing.JRadioButton jRdbBusquedaTitulo;
    private javax.swing.JRadioButton jRdbTipoPelicula;
    private javax.swing.JRadioButton jRdbTipoSerie;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblContenidoAudiovisual;
    private javax.swing.JTextField jTxtBusquedaTitulo;
    // End of variables declaration//GEN-END:variables
}
